---

- name: Add/remove users
  user:
    name: "{{ item.key }}"
    createhome: "{{ item.value.createhome|default(True) }}"
    shell: "{{ item.value.shell|default('/bin/bash') }}"
    generate_ssh_key: "{{ item.value.generate_ssh_key|default(False) }}"
    state: "{{ item.value.present|default('present') }}"
    password: "{{ item.value.password|default('') }}"
    update_password: "{{ item.value.update_password|default('always') }}"
    groups: "{{ item.value.groups|default('') }}"
  with_dict: "{{ users }}"

- name: Remove user accounts from passwordless sudoers.
  lineinfile:
    dest: /etc/sudoers
    regexp: '^{{ item.key }}'
    line: '{{ item.key }} ALL=(ALL) NOPASSWD: ALL'
    state: absent
    validate: 'visudo -cf %s'
  with_dict: "{{ users }}"
  when: item.value.sudoers_passwordless is not defined or not item.value.sudoers_passwordless

- name: Add user accounts to passwordless sudoers.
  lineinfile:
    dest: /etc/sudoers
    regexp: '^{{ item.key }}'
    line: '{{ item.key }} ALL=(ALL) NOPASSWD: ALL'
    state: present
    validate: 'visudo -cf %s'
  with_dict: "{{ users }}"
  when: item.value.sudoers_passwordless is defined and item.value.sudoers_passwordless

- name: Fetch all public ssh keys from all nodes
  shell: cat {{ users_interconnect_ssh_key }}
  register: users_ssh_keys
  changed_when: false
  when: users_interconnect_ssh_key and users_interconnect_user
  tags:
    - users-interconnect

- name: Check fetched keys
  debug: msg="{{ users_ssh_keys.stdout }}"
  when: users_interconnect_ssh_key and users_interconnect_user
  tags:
    - users-interconnect

- name: Deploy fetched keys to all hosts except same host on specific user
  authorized_key: user="{{ users_interconnect_user }}" key="{{ hostvars[item]['users_ssh_keys']['stdout'] }}"
  with_items:
    - "{{ play_hosts }}"
  when: users_interconnect_ssh_key and users_interconnect_user and ansible_hostname != item
  tags:
    - users-interconnect
